name: Java CI with Maven

on:
  push:
    branches: ["heo"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Maven 의존성 캐싱
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Node.js 의존성 캐싱
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      # 변경된 파일만 복사
      - name: Copy changed files to EC2 using rsync
        run: |
          rsync -avz --delete --exclude="node_modules" --exclude="target" -e "ssh -o StrictHostKeyChecking=no" ./ ubuntu@${{ secrets.HOST }}:/home/ubuntu/market
        shell: bash



      # 전체 파일 복사 (필요한 경우 주기적으로 전체 복사를 활성화)
      - name: Full copy to EC2 (manual or periodic)
        if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
        run: |
          scp -r -o StrictHostKeyChecking=no ./* ubuntu@${{ secrets.HOST }}:/home/ubuntu/market

      - name: SSH into EC2 and run Docker Compose
        run: |
          ssh -t -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
            cd /home/ubuntu/market
            docker-compose down
            docker-compose up -d --build
          EOF

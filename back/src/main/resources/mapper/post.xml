<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.back.mapper.PostMapper">

      <resultMap id="postMap" type="com.sist.back.vo.PostVO">
      <id column="postkey" property="postkey" />
          <result column="categorykey" property="categorykey" />
          <result column="userkey" property="userkey" />
          <result column="dealuserkey" property="dealuserkey" />
          <association property="cvo" select="getCvoByPostKey" column="categorykey" javaType="com.sist.back.vo.categoryVO"/>
          <association property="uvo" select="getUvoByPostKey" column="userkey" javaType="com.sist.back.vo.userVO"/>
          <association property="duvo" select="getUvoByDealUserKey" column="dealuserkey" javaType="com.sist.back.vo.userVO"/>
        <collection property="pImg_list" select="getPImg_listByPostKey" column="postkey" ofType="com.sist.back.vo.PostImgVO" />
        <collection property="pInfo_list" select="getPInfo_listByPostKey" column="postkey" ofType="com.sist.back.vo.PostInfoVO" />
    </resultMap>

      <resultMap id="offerMap" type="com.sist.back.vo.OfferVO">
          <result column="offeruserkey" property="offeruserkey" />
          <association property="ouvo" select="getUserByOfferUserKey" column="offeruserkey" javaType="com.sist.back.vo.userVO"/>
    </resultMap>

      <resultMap id="chatroomMap" type="com.sist.back.vo.ChatroomVO">
      <id column="chatroomkey" property="chatroomkey" />
          <result column="chatuserkey" property="chatuserkey" />
          <association property="cuvo" select="getUserByChatUserKey" column="chatuserkey" javaType="com.sist.back.vo.userVO"/>
        <collection property="c_list" select="getChattingByChatroomKey" column="chatroomkey" ofType="com.sist.back.vo.ChattingVO" />
    </resultMap>
      <resultMap id="chattingMap" type="com.sist.back.vo.ChattingVO">
      <id column="chattingkey" property="chattingkey" />
          <result column="chattingemozikey" property="chattingemozikey" />
          <association property="cevo" select="getChattingemoziByChattingemoziKey" column="chattingemozikey" javaType="com.sist.back.vo.ChattingEmoziVO"/>
          <collection property="ci_list" select="getChatimgByChattingKey" column="chattingkey" ofType="com.sist.back.vo.ChatImgVO"/>
    </resultMap>

      <resultMap id="userreviewMap" type="com.sist.back.vo.UserReviewVO">
          <result column="reviewlistkey" property="reviewlistkey" />
          <association property="rlvo" select="getReviewListByReviewListKey" column="reviewlistkey" javaType="com.sist.back.vo.ReviewListVO"/>
    </resultMap>

    <select id="all" resultType="com.sist.back.vo.PostVO">
      SELECT * FROM post
    </select>

    <!-- 1. post 관련 데이터 -->
    <select id="getPostByPostKey" resultMap="postMap" parameterType="int">
        SELECT * FROM `post`
        WHERE postkey = #{postkey}
    </select>
    <select id="getCvoByPostKey" resultType="com.sist.back.vo.categoryVO" parameterType="int">
        SELECT * FROM `category`
        WHERE categorykey = #{categorykey}
    </select>
    <select id="getUvoByPostKey" resultType="com.sist.back.vo.userVO" parameterType="int">
        SELECT * FROM `user`
        WHERE userkey = #{userkey}
    </select>
    <select id="getUvoByDealUserKey" resultType="com.sist.back.vo.userVO" parameterType="int">
        SELECT * FROM `user`
        WHERE userkey = #{dealuserkey}
    </select>
    <select id="getPImg_listByPostKey" resultType="com.sist.back.vo.PostImgVO" parameterType="int">
        SELECT * FROM `postimg`
        WHERE postkey = #{postkey}
    </select>
    <select id="getPInfo_listByPostKey" resultType="com.sist.back.vo.PostInfoVO" parameterType="int">
        SELECT * FROM `post_info`
        WHERE postkey = #{postkey}
    </select>



    <!-- 2. town 관련 데이터 -->
    <select id="getTownByPostKey" resultType="com.sist.back.vo.TownVO" parameterType="int">
        SELECT * FROM `town`
        WHERE townkey = (SELECT townkey
                        FROM `post`
                        WHERE postkey = #{postkey})
    </select>

    <!-- 3. offer 관련 데이터 -->
    <select id="getOfferByPostKey" resultMap="offerMap" parameterType="int">
        SELECT * FROM `offer`
        WHERE postkey = #{postkey}
    </select>

    <select id="getUserByOfferUserKey" resultType="com.sist.back.vo.userVO" parameterType="int">
        SELECT * FROM `user`
        WHERE userkey = #{offeruserkey}
    </select>

    <!-- 4. chatroom 관련 데이터 -->
    <select id="getChatroomByPostKey" resultMap="chatroomMap" parameterType="int">
        SELECT * FROM `chatroom`
        WHERE postkey = #{postkey}
    </select>

    <select id="getUserByChatUserKey" resultType="com.sist.back.vo.userVO" parameterType="int">
        SELECT * FROM `user`
        WHERE userkey = #{chatuserkey}
    </select>

    <select id="getChattingByChatroomKey" resultMap="chattingMap" parameterType="int">
        SELECT * FROM `chatting`
        WHERE chatroomkey = #{chatroomkey}
    </select>

    <select id="getChatimgByChattingKey" resultType="com.sist.back.vo.ChatImgVO" parameterType="int">
        SELECT * FROM `chatimg`
        WHERE chattingkey = #{chattingkey}
    </select>

    <select id="getChattingemoziByChattingemoziKey" resultType="com.sist.back.vo.ChattingEmoziVO" parameterType="int">
        SELECT * FROM `chattingemozi`
        WHERE chattingemozikey = #{chattingemozikey}
    </select>




    <!-- 5. userreview 관련 데이터 -->
    <select id="getUserReviewByPostKey" resultMap="userreviewMap" parameterType="int">
        SELECT * FROM `userreview`
        WHERE postkey = #{postkey}
    </select>
    <select id="getReviewListByReviewListKey" resultType="com.sist.back.vo.ReviewListVO" parameterType="int">
        SELECT * FROM `reviewlist`
        WHERE reviewlistkey = #{reviewlistkey}
    </select>


    <!-- 6. searchpost 관련 데이터 -->
    <!-- <select id="searchpost" resultType="com.sist.back.vo.PostVO">
        SELECT * FROM `post`
        WHERE 1 = 1
          <if test="searchCategory != null and searchCategory != ''">
            <if test="searchCategory == 'title'">
                AND title LIKE CONCAT('%', #{searchCategoryText}, '%')
            </if>
            <if test="categorykey != null and searchCategory != ''">
                AND categorykey = #{searchCategoryText}
            </if>
          </if>
    </select> -->

    <select id="searchpost" resultType="com.sist.back.vo.PostVO">
        SELECT *
        FROM post
        WHERE 1 = 1
        <!-- 검색분류 -->
        <if test="searchCategory != null and searchCategory != '' and searchCategoryText != null and searchCategoryText != ''">
            <if test="searchCategory == 'title'">
                AND title LIKE CONCAT('%', #{searchCategoryText}, '%')
            </if>
            <if test="searchCategory == 'postkey'">
                AND postkey = #{searchCategoryText}
            </if>
            <if test="searchCategory == 'hope_place'">
                AND hope_place LIKE CONCAT('%', #{searchCategoryText}, '%')
            </if>
            <if test="searchCategory == 'townkey'">
                AND townkey = #{searchCategoryText}
            </if>
            <if test="searchCategory == 'userkey'">
                AND userkey = #{searchCategoryText}
            </if>
        </if>
        <!-- 게시글 분류 -->
        <if test="categorykey != null and categorykey != '' and categorykey != '- 분류 선택 -'">
            AND categorykey = #{categorykey}
        </if>
        <!-- 판매상태 -->
        <if test="poststatus != null and poststatus != ''">
            AND poststatus = #{poststatus}
        </if>
        <!-- 거래방식 -->
        <if test="method != null and method != ''">
            AND method = #{method}
        </if>
        <!-- 상품 가격 -->
        <if test="minPrice != null and minPrice != ''">
            AND price &gt;= #{minPrice}
        </if>
        <if test="maxPrice != null and maxPrice != ''">
            AND price &lt;= #{maxPrice}
        </if>
        <!-- 흥정 가능 여부 -->
        <if test="canbargain != null and canbargain != ''">
            AND canbargain = #{canbargain}
        </if>
        <!-- 게시글 생성일 -->
        <if test="create_dtm_a != null and create_dtm_a != ''">
            AND create_dtm &gt;= #{create_dtm_a}
        </if>
        <if test="create_dtm_b != null and create_dtm_b != ''">
            AND create_dtm &lt;= #{create_dtm_b}
        </if>

        <!-- 게시글 수정일 -->
        <if test="update_dtm_a != null and update_dtm_a != ''">
            AND update_dtm &gt;= #{update_dtm_a}
        </if>
        <if test="update_dtm_b != null and update_dtm_b != ''">
            AND update_dtm &lt;= #{update_dtm_b}
        </if>

        <!-- 게시글 삭제일 -->
        <if test="delete_dtm_a != null and delete_dtm_a != ''">
            AND delete_dtm &gt;= #{delete_dtm_a}
        </if>
        <if test="delete_dtm_b != null and delete_dtm_b != ''">
            AND delete_dtm &lt;= #{delete_dtm_b}
        </if>

        <!-- 끌어올리기 일자 -->
        <if test="remind_dtm_a != null and remind_dtm_a != ''">
            AND remind_dtm &gt;= #{remind_dtm_a}
        </if>
        <if test="remind_dtm_b != null and remind_dtm_b != ''">
            AND remind_dtm &lt;= #{remind_dtm_b}
        </if>

        <!-- 거래 완료 일자 -->
        <if test="deal_dtm_a != null and deal_dtm_a != ''">
            AND deal_dtm &gt;= #{deal_dtm_a}
        </if>
        <if test="deal_dtm_b != null and deal_dtm_b != ''">
            AND deal_dtm &lt;= #{deal_dtm_b}
        </if>
        
    </select>


        

</mapper>

